var grunt=require("grunt"),helper=require("../lib/contrib.js").init(grunt);exports.lib={getNamespaceDeclaration:function(a){"use strict";a.expect(10);var b={namespace:'this["JST"]',declaration:'this["JST"] = this["JST"] || {};'},c=helper.getNamespaceDeclaration("this.JST");a.equal(b.namespace,c.namespace,"namespace with square brackets incorrect"),a.equal(b.declaration,c.declaration,"namespace declaration with square brackets incorrect"),c=helper.getNamespaceDeclaration("JST"),a.equal(b.namespace,c.namespace,"namespace with square brackets incorrect"),a.equal(b.declaration,c.declaration,"namespace declaration with square brackets incorrect"),b={namespace:"this",declaration:""},c=helper.getNamespaceDeclaration("this"),a.equal(b.namespace,c.namespace,"namespace with square brackets incorrect"),a.equal(b.declaration,c.declaration,"namespace declaration with square brackets incorrect"),b={namespace:'this["GUI"]["Templates"]["Main"]',declaration:'this["GUI"] = this["GUI"] || {};\nthis["GUI"]["Templates"] = this["GUI"]["Templates"] || {};\nthis["GUI"]["Templates"]["Main"] = this["GUI"]["Templates"]["Main"] || {};'},c=helper.getNamespaceDeclaration("GUI.Templates.Main"),a.equal(b.namespace,c.namespace,"namespace incorrect"),a.equal(b.declaration,c.declaration,"namespace declaration incorrect"),b={namespace:'this["main"]["[test]"]["[test2]"]',declaration:'this["main"] = this["main"] || {};\nthis["main"]["[test]"] = this["main"]["[test]"] || {};\nthis["main"]["[test]"]["[test2]"] = this["main"]["[test]"]["[test2]"] || {};'},c=helper.getNamespaceDeclaration("main.[test].[test2]"),a.equal(b.namespace,c.namespace,"namespace with square brackets incorrect"),a.equal(b.declaration,c.declaration,"namespace declaration with square brackets incorrect"),a.done()},optsToArgs:function(a){"use strict";a.expect(1);var b={key:"a",key2:1,key3:!0,key4:!1,key5:["a","b"]},c=["--key","a","--key2","1","--key3","--key5","a","--key5","b"].toString(),d=helper.optsToArgs(b).toString();a.equal(c,d,"should convert object to array of CLI arguments"),a.done()},stripPath:function(a){"use strict";var b=require("path");a.expect(4);var c=helper.stripPath("path1/path2","path1"),d="path2";a.equal(d,c,"should strip path from a directory path and trim it."),c=helper.stripPath("path1/path2/path3/path4","path1/path2"),d=b.normalize("path3/path4"),a.equal(d,c,"should strip path from a directory path and trim it. (deep)"),c=helper.stripPath("path1/file.ext","path1"),d="file.ext",a.equal(d,c,"should strip path from a file path and trim it."),c=helper.stripPath("path1/path2/path3/path4/file.ext","path1/path2"),d=b.normalize("path3/path4/file.ext"),a.equal(d,c,"should strip path from a file path and trim it. (deep)"),a.done()},minMaxInfo:function(a){"use strict";a.expect(3);var b,c,d=new Array(100).join("blah "),e=d.replace(/\s+/g,"");grunt.util.hooker.hook(grunt.log,"writeln",{pre:function(a){return b+=grunt.log.uncolor(a)+grunt.util.linefeed,grunt.util.hooker.preempt()}}),grunt.util.hooker.hook(grunt.log,"write",{pre:function(a){return b+=grunt.log.uncolor(a),grunt.util.hooker.preempt()}}),b="",c="",helper.minMaxInfo(e,d),a.equal(c,b,"should not have reported min and max info."),b="",c=["Original: 495 bytes.","Minified: 396 bytes."].join(grunt.util.linefeed)+grunt.util.linefeed,helper.minMaxInfo(e,d,"min"),a.equal(c,b,"should have logged min and max info."),b="",c=["Original: 495 bytes.","Minified: 396 bytes.","Gzipped:  36 bytes."].join(grunt.util.linefeed)+grunt.util.linefeed,helper.minMaxInfo(e,d,"gzip"),a.equal(c,b,"should have logged min, max, gzip info."),grunt.util.hooker.unhook(grunt.log,"writeln"),grunt.util.hooker.unhook(grunt.log,"write"),a.done()},formatToType:{amd:function(a){"use strict";a.expect(2);var b=function(){},c=helper.formatForType(b,"amd","JST","test"),d='JST["test"] = function () { };';a.equal(d,c,"should format string to amd with namespace"),c=helper.formatForType(b,"amd"),d="return function () { }",a.equal(d,c,"should format string to amd"),a.done()},commonjs:function(a){"use strict";a.expect(2);var b=function(){},c=helper.formatForType(b,"commonjs","JST","test"),d='JST["test"] = function () { };';a.equal(d,c,"should format string to commonjs with namespace"),c=helper.formatForType(b,"commonjs"),d="module.exports = function () { }",a.equal(d,c,"should format string to commonjs"),a.done()},js:function(a){"use strict";a.expect(2);var b=function(){},c=helper.formatForType(b,"js","JST","test"),d='JST["test"] = function () { };';a.equal(d,c,"should format string to js with namespace"),c=helper.formatForType(b,"js"),d="function () { }",a.equal(d,c,"should format string to js"),a.done()},html:function(a){"use strict";a.expect(2);var b=function(){},c=helper.formatForType(b,"html","JST","test"),d="function () { }";a.equal(d,c,"should format string to html with namespace"),c=helper.formatForType(b,"html"),d="function () { }",a.equal(d,c,"should format string to html"),a.done()}}};