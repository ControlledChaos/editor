"use strict";module.exports=function(a){a.initConfig({pkg:a.file.readJSON("package.json"),meta:{copyright:'Copyright (c) <%= grunt.template.today("yyyy") %>',license:'<%= _.pluck(pkg.licenses, "type").join(", ") %>',banner:["/*"," * <%= pkg.name %>"," * http://assemble.io"," *"," * <%= meta.copyright %>, <%= pkg.author.name %>"," * Licensed under the <%= meta.license %> License."," *"," */\n"].join("\n")},bootstrap:"test/fixtures/bootstrap",assets:"test/assets/foo",jshint:{all:["Gruntfile.js","tasks/*.js","<%= nodeunit.tests %>"],options:{jshintrc:".jshintrc"}},clean:{tests:["test/actual"]},less:{props:{options:{imports:{reference:["variables.less","mixins.less"]}},src:"test/fixtures/props.less",dest:"test/actual/props.css"},merge:{options:{imports:{reference:["variables.less","mixins.less"]}},src:"test/fixtures/merge.less",dest:"test/actual/merge.css"},globalVariables:{options:{globalVars:{content:"Global Variable!!!"}},files:{"test/actual/globalVars.css":"test/fixtures/globalVars.less"}},modifyVariables:{options:{modifyVars:{content:"BOTTOM",foo:"bar"}},files:{"test/actual/modifyVars.css":"test/fixtures/modifyVars.less"}},bootstrap:{src:"<%= bootstrap %>/bootstrap.less",dest:"test/actual/css/bootstrap.css"},alerts:{options:{imports:{reference:["variables.less","mixins.less"]}},src:"<%= bootstrap %>/alerts.less",dest:"test/actual/css/alerts.css"},reference:{options:{paths:["<%= bootstrap %>"],imports:{reference:["variables.less","mixins.less","scaffolding.less","forms.less","buttons.less","utilities.less"]}},files:[{expand:!0,cwd:"<%= bootstrap %>",src:["*.less","!{boot,var,mix}*.less"],dest:"test/actual/css/reference/",ext:".css"}]},metadata:{options:{test:"package.json",metadata:["test/fixtures/data/*.{yml,json}","package.json",{palette:{info:"blue"}}],palette:{info:"red"},name:"Overridden",foo:"callout",bar:"alert",theme:{name:"Metadata test",description:"Metadata was successfully processed!"},paths:["<%= bootstrap %>"],imports:{reference:["mixins.less","variables.less","alerts.less"]}},files:{"test/actual/metadata.css":["test/fixtures/metadata.less"]}},lodash:{options:{metadata:["test/fixtures/data/*.{yml,json}"]},files:[{expand:!0,flatten:!0,cwd:"test/fixtures",src:["templates-*.less"],dest:"test/actual/lodash/",ext:".css"}]},runtimeConfig:{options:{lessrc:"test/.lessrc"},files:[{expand:!0,flatten:!0,cwd:"test/fixtures",src:["templates-*.less"],dest:"test/actual/runtimeConfig",ext:".css"}]},stripbanners:{options:{stripBanners:!0},files:[{expand:!0,flatten:!0,cwd:"test/fixtures/strip_banners",src:["*.less"],dest:"test/actual/strip_banners/",ext:".css"}]},banner:{options:{stripBanners:!0,banner:"<%= meta.banner %>"},files:[{expand:!0,flatten:!0,cwd:"test/fixtures/banners",src:["*.less"],dest:"test/actual/banners/",ext:".css"}]},bannerMinified:{options:{compress:!0,stripBanners:!0,banner:"<%= meta.banner %>"},files:[{expand:!0,flatten:!0,cwd:"test/fixtures/banners",src:["*.less"],dest:"test/actual/minified/",ext:".css"}]},compile:{options:{paths:["test/fixtures/include"]},files:{"test/actual/less.css":["test/fixtures/style.less"],"test/actual/concat.css":["test/fixtures/style.less","test/fixtures/style2.less","test/fixtures/style3.less"]}},compress:{options:{paths:["test/fixtures/include"],compress:!0},files:{"test/actual/compress.css":["test/fixtures/style.less"]}},cleancss:{options:{paths:["test/fixtures/include"],cleancss:!0},files:{"test/actual/cleancss.css":["test/fixtures/style.less"]}},compressReport:{options:{paths:["test/fixtures/include"],compress:!0,report:"min"},files:{"test/actual/compressReport.css":["test/fixtures/style.less","test/fixtures/style2.less"]}},cleancssReport:{options:{paths:["test/fixtures/include"],cleancss:!0,report:"gzip"},files:{"test/actual/cleancssReport.css":["test/fixtures/style.less","test/fixtures/style2.less","test/fixtures/style3.less"]}},variablesAsLess:{src:"test/fixtures/variablesAsLess.less",dest:"test/actual/variablesAsLess.css"},sourceMap:{options:{sourceMap:!0},src:"test/fixtures/style3.less",dest:"test/actual/sourceMap.css"},sourceMapFilename:{options:{sourceMap:!0,sourceMapFilename:"test/actual/sourceMapFilename.css.map"},src:"test/fixtures/style3.less",dest:"test/actual/sourceMapFilename.css"},sourceMapURL:{options:{sourceMap:!0,sourceMapFilename:"test/actual/sourceMap.css.map",sourceMapURL:"custom/url/for/sourceMap.css.map"},src:"test/fixtures/style3.less",dest:"test/actual/sourceMapWithCustomURL.css"},sourceMapBasepath:{options:{sourceMap:!0,sourceMapFilename:"test/actual/sourceMapBasepath.css.map",sourceMapBasepath:"test/fixtures/"},src:"test/fixtures/style3.less",dest:"test/actual/sourceMapBasepath.css"},sourceMapRootpath:{options:{sourceMap:!0,sourceMapFilename:"test/actual/sourceMapRootpath.css.map",sourceMapRootpath:"http://example.org/"},src:"test/fixtures/style3.less",dest:"test/actual/sourceMapRootpath.css"},sourceMapLessInline:{options:{sourceMap:!0,sourceMapFilename:"test/actual/sourceMapLessInline.css.map",outputSourceFiles:!0},src:"test/fixtures/style3.less",dest:"test/actual/sourceMapLessInline.css"},testCustomFunctions:{options:{assets:"<%= assets %>",customFunctions:{assets:function(b,c){return a.config.process("<%= assets %>")},prefix:function(b,c){return a.config.process("<%= assets %>")},"multiple-args":function(a,b,c){return 1*b.value+c.value+b.unit.numerator[0]},"string-result":function(a,b){return'"Hello"'},"to-rgb":function(a,b){return console.log(b),"rgb("+b.rgb+")"},"to-rgba":function(a,b){return console.log(b),"rgba("+b.rgb+","+b.alpha+")"},"to-hex":function(a,b,c,d){return b=b.value,c=c.value,d=d.value,"#"+((1<<24)+(b<<16)+(c<<8)+d).toString(16).slice(1)}}},files:{"test/actual/customFunctions.css":["test/fixtures/customFunctions.less"],"test/actual/assets.css":["test/fixtures/assets.less"],"test/actual/hex.css":["test/fixtures/hex.less"]}},nofiles:{},nomatchedfiles:{files:{"test/actual/nomatchedfiles.css":"test/nonexistent/*.less"}},nopaths:{files:{"test/actual/nopaths.css":["test/fixtures/nopaths.less"]}},ieCompatTrue:{options:{paths:["test/fixtures/include"],ieCompat:!0},files:{"test/actual/ieCompatTrue.css":["test/fixtures/ieCompat.less"]}},ieCompatFalse:{options:{paths:["test/fixtures/include"],ieCompat:!1},files:{"test/actual/ieCompatFalse.css":["test/fixtures/ieCompat.less"]}}},nodeunit:{tests:["test/*_test.js"]}}),a.loadTasks("tasks"),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-clean"),a.loadNpmTasks("grunt-contrib-nodeunit"),a.loadNpmTasks("grunt-readme"),a.registerTask("test",["clean","less","nodeunit"]),a.registerTask("default",["jshint","test","readme"])};