/**
 * image-plugin.min.js
 *
 *
 * License: http://www.siteeditor.org/license
 * Contributing: http://www.siteeditor.org/contributing
 */

/*global siteEditor:true */
siteEditor.PluginManager.add('image', function(siteEditor) {
    var api = siteEditor.sedAppClass.editor , $ = siteEditor.dom.Sizzle;
    api.currentHoverEffectModel = api.currentHoverEffectModel || {};

    api.HoverEffect = api.SiteEditorControls.extend({

        _ready: function() {

			var control = this ,
                dialog = $("#dialog_page_box_" + this.shortcode + "_" + this.attr );

            this.dialog = dialog;



            dialog.find(".hover-effect-dialog-inner").html( $("#tmpl-dialog-image-hover-effect").html() );

            dialog.find( ".group-hover-effect" ).accordion({
                active: 0,
                collapsible: true,
                event: 'click',
                heightStyle: 'content',
            });

            api.Events.bind( "after_apply_settings_relations_update" , function( shortcode ){
                if(shortcode == control.shortcode){
                    var num = dialog.find( ".group-hover-effect > .ui-accordion-header:visible:first" ).index();
                    dialog.find( ".group-hover-effect" ).accordion("option" , "active" , num/2);
                }
            });

            api.Events.bind( "after_apply_settings_relations_refresh" , function( shortcode , attr ){
                if(shortcode == control.shortcode && !_.isUndefined( control.params.relation_attrs ) && $.inArray( attr , control.params.relation_attrs ) > -1 ){
                    var num = dialog.find( ".group-hover-effect > .ui-accordion-header:visible:first" ).index();
                    dialog.find( ".group-hover-effect" ).accordion("option" , "active" , num/2);
                }
            });

            this._hoverEffectSupport();

            this.container.find(".sed-hover-effect-btn").on("click" , function(){
                yepnope({
                    load: SEDEXTBASE.url + "hover-effect/css/ihover.min.css",
                    callback: function (url, result, key) {

                    }
                });

            });

            dialog.find('.remove-current-hover-effect').click(function(){
                control.refresh( "" );
                dialog.find(".hover-effect-item").removeClass("hover-effect-item-selected");
            });

            dialog.find('.hover-effect-item').click(function(){
                var value = $(this).data("value");

                control.refresh( value );
                dialog.find(".hover-effect-item").removeClass("hover-effect-item-selected");
                $(this).addClass("hover-effect-item-selected");
            });

        },

        _hoverEffectSupport : function( ){
            if( _.isUndefined( this.params.support ) )
                return ;

            var self = this,
                hoverEffects = this.params.support ,
                type = ( !_.isUndefined( hoverEffects.type ) ) ? hoverEffects.type.toLowerCase() : "include";

            if( !$.isArray(hoverEffects.fields) || hoverEffects.fields.length == 0 )
                return ;

            if( type == "include" )
                this.dialog.find(".hover-effect-item").hide();

            _.each( hoverEffects.fields , function( field ){

                var hoverEffectEl = self.dialog.find("[data-value='" + field + "']");

                if( hoverEffectEl.length > 0 && type == "include"  )
                    hoverEffectEl.css("display" , "inline-block");
                else if( hoverEffectEl.length > 0 && type == "exclude"  )
                    hoverEffectEl.hide();
            });


            this.dialog.find(".group-hover-effect > div").each(function(){
                $(this).show();
                var numV = $(this).find(".hover-effect-item:visible").length;

                if(numV == 0){
                    $(this).prev().hide();
                    $(this).hide();
                }else{
                    $(this).prev().show();
                    $(this).hide();
                }
            });

        },

        _update: function( val ){

            this.dialog.find(".hover-effect-item").removeClass("hover-effect-item-selected");
            this.dialog.find(".hover-effect-item[data-value='" + val + "']").addClass("hover-effect-item-selected");

        }

    });

    api.createRelations.hover_effect = function( value , type , id , shortcode , attr , selectedControl ){
        type = (!type) ? "hide" : type;
        var element = $( "#dialog_page_box_" + shortcode + "_" + attr );
        //alert(element.find("[data-value]").length);
        if(type == "hide"){
            element.find("[data-value='" + value + "']").hide();
        }else
            element.find("[data-value='" + value + "']").css("display" , "inline-block");

        var cEl = element.find("[data-value='" + value + "']").parent();
        cEl.show();
        var cElVCh = cEl.find(">div:visible");

        if(cElVCh.length > 0){
            cEl.hide();
            cEl.prev().show();
        }else{
            cEl.hide();
            cEl.prev().hide();
        }

        //$(".hover-effect-dialog-inner > .group-hover-effect").accordion("option" , "active" , 20);
    };

    api.controlConstructor = $.extend( api.controlConstructor, {
        hover_effect : api.HoverEffect
    });

    /*$( function() {


    }); */

});