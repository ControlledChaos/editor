(function( exports, $ ){
    
    var api = sedApp.editor;

    api.pageSettings = api.pageSettings || {};

    api.SiteEditorPageOptionsPreview = api.Class.extend({

        /**
         * Initialize SiteEditor Page Options Preview
         * 
         * @param options : Class Options
         */
        initialize: function ( options ) {

            var self = this;

            this.data = {
                settings        : {} ,
                publicOption    : '' ,
                layoutOption    : '' ,
                privateOption   : ''
            };

            this.currentScope = 'public';

            $.extend( this, options || {} );

            api( "page_options_scope", function (value) { alert( value );
                value.bind(function (to) {
                    self.changeScope( to );
                });
            });

            this.settingsBind();

        } ,

        settingsBind : function ( ) {

            var self = this;

            $.each( this.data.settings , function( id , args ){

                if( args.transport == "postMessage" ){

                    var publicSId  = self.data.publicOption.replace( "##id##" , id ),
                        layoutSId  = self.data.layoutOption.replace( "##id##" , id ),
                        privateSId = self.data.privateOption.replace( "##id##" , id ) ,
                        groupSettings = {
                            "public"    : publicSId  ,
                            "layout"    : layoutSId  ,
                            "private"   : privateSId
                        };

                    $.each( groupSettings , function( type , settingId ) {
                        api( settingId , function (value) {
                            value.bind(function (to) {

                                var currentScope = api( "page_options_scope" )();

                                if( currentScope !== type ){
                                    return ;
                                }

                                if( !_.isUndefined( api.pageSettings[id] ) && _.isFunction( api.pageSettings[id] ) ){
                                    api.pageSettings[id]( to , settingId , type );
                                }

                            });
                        });
                    });

                }

            });

        } ,

        changeScope : function ( currentScope ) {

            var self = this ,
                forceRefresh = false;

            $.each( this.data.settings , function( id , args ){

                if( args.transport == "refresh" ){

                    forceRefresh = true;

                    return false;//breck each

                }

            });

            if( forceRefresh === true ){
                api.preview.send( 'previewerForceRefresh' );
            }else{

                $.each( this.data.settings , function( id , args ){

                    var settingId ,
                        type;

                    switch ( currentScope ){

                        case "public-scope" :
                            settingId  = self.data.publicOption.replace( "##id##" , id );
                            type = "public";
                            break;

                        case "layout-scope" :
                            settingId  = self.data.layoutOption.replace( "##id##" , id );
                            type = "layout";
                            break;

                        case "page-customize-scope" :
                            settingId = self.data.privateOption.replace( "##id##" , id );
                            type = "private";
                            break;

                    }

                    if( !_.isUndefined( api.pageSettings[id] ) && _.isFunction( api.pageSettings[id] ) ){
                        api.pageSettings[id]( to , settingId , type );
                    }

                });

            }

        }

    });

    $( function() {

        var _pageOptionsData = window._sedAppPreviewPageOptionsData;

        api.pagesOptionsPreview = new api.SiteEditorPageOptionsPreview({
            data : _pageOptionsData
        });

        api.pageSettings.page_length = function( newValue , settingId , type ){

            alert( newValue );
            alert( settingId );
            alert( type );

        };

    });


})( sedApp, jQuery );