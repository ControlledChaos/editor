(function( exports, $ ) {
    var api         = sedApp.editor;

    $( function() {

        var _getAtts = function( id , name ){
            var recentWorks    = api.shortcodes['sed_recent_works'];
                shortcode = api.contentBuilder.getShortcode( id ),
                attrs = shortcode.attrs ,
                value = ( !_.isUndefined( attrs[name] ) ) ?  attrs[name] : recentWorks.attrs[name] ;

            return value;
        };

        api.shortcodeUpdate.sed_recent_works = {
            tab_skins : function( id , to ){
                var $element = $("#" + id);

                var styleClass = $element.find(".portfolios:first").attr( "sed-skin-class" );

                if( styleClass )
                    $element.find(".portfolios:first").removeClass( styleClass );

                $element.find(".portfolios:first").addClass( to );
                $element.find(".portfolios:first").attr( "sed-skin-class" , to );

            },

            content_box_img_arrow : function( id , to ){
                var $element = $("#" + id);

                var $items = $element.find(".module.module-image-content-box .inner"),
                    classes = ['item_arrow' , 'item_center_arrow'];

                $.each( classes , function(idx , cls){
                    if( to == cls && !$items.hasClass( to ) )
                        $items.addClass( to );
                    else
                        $items.removeClass( cls );
                });

            },

            content_box_border_width : function( id , to ){
                var $element = $("#" + id) ,
                    text_layout_type = _getAtts( id , 'text_layout_type' );

                var $items = $element.find(".module.module-image-content-box .inner");

                if( to > 0 )
                    $items.addClass( "item-bodered" );
                else
                    $items.removeClass( "item-bodered" );

                $items.css({
                    borderWidth: to + 'px' ,
                });

                if( text_layout_type == "masonry" )
                    $element.find('.sed-portfolio-masonry').masonry();

            },

            button_size : function( id , to ){
                var $element = $("#" + id) ,
                    text_layout_type = _getAtts( id , 'text_layout_type' );


                var $items = $element.find(".module.module-button > .btn"),
                    classes = ['btn-xs' , 'btn-sm' , 'btn-lg' , 'btn-xl'];

                $.each( classes , function(idx , cls){
                    if( to == cls && !$items.hasClass( to ) )
                        $items.addClass( to );
                    else
                        $items.removeClass( cls );
                });

                if( text_layout_type == "masonry" )
                    $element.find('.sed-portfolio-masonry').masonry();

            },

            button_type : function( id , to ){
                var $element = $("#" + id) ,
                    text_layout_type = _getAtts( id , 'text_layout_type' );


                var $items = $element.find(".module.module-button > .btn"),
                    classes = ['btn-main','btn-default','btn-purple' ,'btn-success','btn-info' ,'btn-warning','btn-danger','btn-flat' ,'btn-none'];

                $.each( classes , function(idx , cls){
                    if( to == cls && !$items.hasClass( to ) )
                        $items.addClass( to );
                    else
                        $items.removeClass( cls );
                });

                if( text_layout_type == "masonry" )
                    $element.find('.sed-portfolio-masonry').masonry();

            },

            number_columns : function( id , to ){
                var $element = $("#" + id) ,
                    gallery , baseClass ,
                    layout_type = _getAtts( id , 'portfolio_layout_type' ) ,
                    text_layout_type = _getAtts( id , 'text_layout_type' );

                switch ( layout_type ) {
                    case "grid":
                        gallery = '.module.module-grid-gallery';
                        baseClass = 'sed-columns-';
                    break;
                    case "masonry":
                        gallery = '.module.module-masonery-gallery';
                        baseClass = 'sed-columns-';
                    break;
                    case "text-layout":
                        gallery = '.portfolio-wrapper .sed-item-portfolio';
                        baseClass = 'sed-column-';
                    break;
                }

                var $container = $element.find( gallery );

                $.each([1,2,3,4,5,6] , function( i , val ){
                    if( $container.hasClass( baseClass + val) ){
                        $container.removeClass( baseClass + val);
                    }
                });

                if( to > 6 ){
                  to = 6;
                }else if( to < 1 ){
                  to = 1;
                }

                var  column_class = baseClass + to;

                $container.addClass(column_class);

                switch ( layout_type ) {
                    case "grid":
                        $container.trigger( "sed.refreshGridGallery" );
                    break;
                    case "masonry":
                        $element.find('.portfolio-wrapper').masonry();
                    break;
                    case "text-layout":
                        if( text_layout_type == "masonry" )
                            $element.find('.sed-portfolio-masonry').masonry();
                    break;
                }

            },

            content_box_img_spacing : function( id , to ){
                var $element = $("#" + id) ,
                    content_box_type = _getAtts( id , 'content_box_type' ) ,
                    text_layout_type = _getAtts( id , 'text_layout_type' );

                var $items = $element.find(".module.module-image-content-box .img-item");

                switch ( content_box_type ) {
                    case "default":   //top
                      $items.css({
                        padding: to +'px ' + to + 'px 0' ,
                      });
                    break;
                    case "skin1":    //left
                      $items.css({
                        padding: to +'px 0' + to + 'px ' + to + 'px' ,
                      });
                    break;
                   /* case "skin3":     //bottom
                      $items.css({
                        padding: '0 ' + to + 'px ' + to + 'px ' + to + 'px' ,
                      });
                    break; */
                    case "skin2":    //right
                      $items.css({
                        padding: to + 'px ' + to + 'px ' + to + 'px 0' ,
                      });
                    break;
                }

                if( text_layout_type == "masonry" )
                    $element.find('.sed-portfolio-masonry').masonry();

            },

            column_spacing : function( id , to ){
                var $element = $("#" + id),
                    layout_type = _getAtts( id , 'portfolio_layout_type' ) ,
                    text_layout_type = _getAtts( id , 'text_layout_type' );

                $element.find('.portfolio-item').css({
                  padding: to +'px',
                });

                switch ( layout_type ) {
                    case "grid":
                        $element.find('.module.module-grid-gallery').trigger( "sed.refreshGridGallery" );
                    break;
                    case "masonry":
                        $element.find('.portfolio-wrapper').masonry();
                    break;
                    case "text-layout":
                        if( text_layout_type == "masonry" )
                            $element.find('.sed-portfolio-masonry').masonry();
                    break;
                }

            },

            show_portfolio_filters : function( id , to ){
                var $element = $("#" + id);

                if( to )
                    $element.find(".portfolio-tabs").removeClass("hide");
                else
                    $element.find(".portfolio-tabs").addClass("hide");

            },

        };

    });

}(sedApp, jQuery));
