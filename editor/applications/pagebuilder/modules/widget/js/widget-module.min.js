(function( exports, $ ) {
    var api = sedApp.editor;
    api.currentWidgetContent = api.currentWidgetContent || "";
    api.shortcodeUpdate = api.shortcodeUpdate || {};

    $( function() {
                    
        api.shortcodeCreate.sed_widget = function( id , param ){

            if( api.currentWidgetIdBase )
                param.context.id_base = api.currentWidgetIdBase;

            if( !api.currentWidgetContent )
                return param;

            param.context.widget_content = api.currentWidgetContent;

            return param;
        };

        api.shortcodeUpdate.sed_widget = {
            widget_skin : function( id , value ){
                var wgSkin = $( '[sed_model_id="' + id + '"]' ).data( 'widgetSkin' );

                if( wgSkin ){
                    $( '[sed_model_id="' + id + '"]' ).removeClass( wgSkin );
                    $( '[sed_model_id="' + id + '"]' ).removeData( 'widgetSkin' );
                }

                $( '[sed_model_id="' + id + '"]' ).addClass( value );

                $( '[sed_model_id="' + id + '"]' ).data( 'widgetSkin' , value )

            }
        };

        //rev slider fixed resize and sortable
        $(".rev_slider").livequery(function(){
            var revapi = $(this);

            $(this).parents(".sed-pb-module-container:first").on("sed.moduleResize sed.moduleResizeStop sed.moduleSortableStop" , function(){
                revapi.revredraw();
            });

        });

        //layer slider fixed resize and sortable
        /*$('.ls-wp-container').livequery(function(){
            var lsSlider = $(this);

            $(this).parents(".sed-pb-module-container:first").on("sed.moduleResize sed.moduleResizeStop sed.moduleSortableStop" , function(){
                lsSlider.data("LayerSlider").restart();
            });

        });*/

    });


}(sedApp, jQuery));