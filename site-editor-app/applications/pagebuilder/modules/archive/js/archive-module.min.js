(function( exports, $ ) {
    var api         = sedApp.editor,
        $element    = $('[data-sed-archive-role="posts-container"]') ,
        post_meta   = {
            archive_author_show             : ".post-author",
            archive_post_meta_show          : ".meta-info",
            archive_time_show               : ".post-time",
            archive_date_show               : ".post-date",
            archive_comment_count_show      : ".post-comments",
            archive_cat_show                : ".post-cat",
            archive_tags_show               : ".post-tags",
            archive_thumbnail               : ".image" ,
            archive_excerpt_content_show    : ".post_content"
        };

    $( function() {

        api( 'archive_skin_default_style', function( value ) {
            value.bind( function( to ) {

                var styleClass = $element.data( "styleClass" );

                if( styleClass )
                    $element.removeClass( styleClass );

                if( to != "default"){
                    $element.addClass( to );
                    $element.data( "styleClass" , to );
                }else
                    $element.data( "styleClass" , "" );

                $element.find('.sed-archive-masonry').masonry();

            });
        });

        api( "archive_number_columns" , function( value ) {
            value.bind( function( to ) {
                var $container = $element.find('.sed-archive-masonry');

                $.each([1,2,3,4,5,6] , function( i , val ){
                    if( $element.find('.item').hasClass('sed-column-'+val) ){
                        $element.find('.item').removeClass('sed-column-'+val);
                    }
                });

                if( to > 6 ){
                  to = 6;
                }else if( to < 1 ){
                  to = 1;
                }

                var  column_class='sed-column-' + to;

                $element.find('.item').addClass(column_class);
                $container.masonry();

            });
        });


        api( "archive_masonry_spacing" , function( value ) {
            value.bind( function( to ) {

                $element.find('.item').css({
                  padding: to +'px',
                });

                $element.find('.repository-posts').css({
                    marginLeft: -to +'px',
                    marginRight: -to +'px',
                    marginTop: -to +'px',
                });

                $element.find('.sed-archive-masonry').masonry();

            });
        });

        api( "archive_border_width" , function( value ) {
            value.bind( function( to ) {

                $element.find('.item .inner').css({
                  borderWidth: to +'px',
                });

                if(to == 0){

                    $element.find('.archive-item-body').addClass('content-without-border');

                }else{

                    if( $element.find('.archive-item-body').hasClass('content-without-border') ){
                        $element.find('.archive-item-body').removeClass('content-without-border');
                    }
                }

                $element.find('.sed-archive-masonry').masonry();

            });
        });

        // display and hide item post meta
        $.each( post_meta , function( key , selector ) {
            api( key , function( value ) {
                value.bind( function( to ) {

                    /*if( $.inArray( key , ["archive_author_show" , "archive_time_show" , "archive_date_show" , "archive_comment_count_show" , "archive_cat_show" , "archive_tags_show"]) != -1 ){
                        if( to && api( "archive_post_meta_show" )() )
                            $element.find(selector).removeClass("hide");
                        else
                            $element.find(selector).addClass("hide");
                    }else{ */

                    if( to )
                        $element.find(selector).removeClass("hide");
                    else
                        $element.find(selector).addClass("hide");

                    //}

                    if(key == "archive_post_meta_show"){
                        if( to )
                            $element.find(".item-meta").show();
                        else
                            $element.find(".item-meta").hide();
                    }

                        $element.find('.sed-archive-masonry').masonry();

                });
            });
        });


        api.preview.bind( 'active', function() {

            api.preview.send( 'sed_archive_type' , window._sedArchiveType );
        });


    });

}(sedApp, jQuery));
