(function( exports, $ ) {
    var api = sedApp.editor;

    $( function() {

        api.Events.bind("change_icon_sed_counter_circle" , function(icon){
            var elementId = api.styleCurrentSelector.replace("#" , "");

            api.contentBuilder.updateShortcodeAttr( "setting_icon"  , icon.className , elementId);
            api.contentBuilder.refreshModule( elementId );
        });

        api.Events.bind( "ctxtAct_counter_circle_remove_icon"  , function(event , context , element){
            var element = $(context);

            if( element.hasClass("sed-bp-module") ){
                element = element.find(".sed-pb-module-container:first");
            }else if( element.hasClass("sed-row-pb") ){
                element = element.find(">.sed-pb-module-container .sed-pb-module-container:first");
            }

            api.contentBuilder.updateShortcodeAttr( "setting_icon"  , '' , element.attr("sed_model_id"));
            api.contentBuilder.refreshModule( element.attr("sed_model_id") );

        });

        api.shortcodeCreate.sed_counter_circle = function( id , param ){

            if(param.context.setting_type == 'half' ||  param.context.setting_type == 'angle'){
                param.context.setting_startdegree = 0;
            }

            if(param.context.setting_type == 'angle'){
                param.context.setting_fill = 'transparent';
            }

            var js_settings_str = "",key_setting='';
            $.each( param.context , function( key , value ){

               if( key == 'setting_iconsize' ){
                   value = value + 'px';
               }

            	if( key.substr(0,7) == 'setting' ){
                    key_setting = key.substr(8);
                    js_settings_str += "data-" + key_setting.replace(/\_/gi , "-") + '=\"' + value + '\" ';   //console.log(value);console.log(js_settings_str);
            	}

            });
            param.context.item_settings = js_settings_str;
            return param;
        };

    });

}(sedApp, jQuery));