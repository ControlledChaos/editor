(function( exports, $ ) {
    var api         = sedApp.editor,
        $element    = $('.portfolio-main [data-sed-portfolio-role="item-container"]') ,
        post_meta   = {
            show_portfolio_filters    : ".portfolio-tabs"
        };

    $( function() {

        api( 'portfolio_tab_skins', function( value ) {
            value.bind( function( to ) {

                var styleClass = $element.find(".portfolios:first").attr( "sed-skin-class" );

                if( styleClass )
                    $element.find(".portfolios:first").removeClass( styleClass );

                $element.find(".portfolios:first").addClass( to );
                $element.find(".portfolios:first").attr( "sed-skin-class" , to );

                //$element.find('.sed-archive-masonry').masonry();

            });
        });


        api( 'portfolio_image_content_box_arrow', function( value ) {
            value.bind( function( to ) {

                var $items = $element.find(".module.module-image-content-box .inner"),
                    classes = ['item_arrow' , 'item_center_arrow'];

                $.each( classes , function(idx , cls){
                    if( to == cls && !$items.hasClass( to ) )
                        $items.addClass( to );
                    else
                        $items.removeClass( cls );
                });

            });
        });

        api( 'portfolio_image_content_box_img_spacing', function( value ) {
            value.bind( function( to ) {

                var $items = $element.find(".module.module-image-content-box .img-item");

                switch ( api( "portfolio_image_content_box_skin")() ) {
                    case "default":   //top
                      $items.css({
                        padding: to +'px ' + to + 'px 0' ,
                      });
                    break;
                    case "skin1":    //left
                      $items.css({
                        padding: to +'px 0' + to + 'px ' + to + 'px' ,
                      });
                    break;
                   /* case "skin3":     //bottom
                      $items.css({
                        padding: '0 ' + to + 'px ' + to + 'px ' + to + 'px' ,
                      });
                    break;  */
                    case "skin2":    //right                              
                      $items.css({
                        padding: to + 'px ' + to + 'px ' + to + 'px 0' ,
                      });
                    break;
                }
                if( api( 'portfolio_text_layout_type' )() == "masonry" )
                    $element.find('.sed-portfolio-masonry').masonry();
            });
        });

        api( 'portfolio_image_content_box_border', function( value ) {
            value.bind( function( to ) {

                var $items = $element.find(".module.module-image-content-box .inner");

                if( to > 0 )
                    $items.addClass( "item-bodered" );
                else
                    $items.removeClass( "item-bodered" );

                $items.css({
                    borderWidth: to + 'px' ,
                });

                if( api( 'portfolio_text_layout_type' )() == "masonry" )
                    $element.find('.sed-portfolio-masonry').masonry();
            });
        });

        api( 'portfolio_image_content_box_button_size', function( value ) {
            value.bind( function( to ) {

                var $items = $element.find(".module.module-button > .btn"),
                    classes = ['btn-xs' , 'btn-sm' , 'btn-lg' , 'btn-xl'];

                $.each( classes , function(idx , cls){
                    if( to == cls && !$items.hasClass( to ) )
                        $items.addClass( to );
                    else
                        $items.removeClass( cls );
                });

                if( api( 'portfolio_text_layout_type' )() == "masonry" )
                    $element.find('.sed-portfolio-masonry').masonry();
            });
        });


        api( 'portfolio_image_content_box_button_type', function( value ) {
            value.bind( function( to ) {

                var $items = $element.find(".module.module-button > .btn"),
                    classes = ['btn-main','btn-default','btn-purple' ,'btn-success','btn-info' ,'btn-warning','btn-danger','btn-flat' ,'btn-none'];

                $.each( classes , function(idx , cls){
                    if( to == cls && !$items.hasClass( to ) )
                        $items.addClass( to );
                    else
                        $items.removeClass( cls );
                });

                if( api( 'portfolio_text_layout_type' )() == "masonry" )
                    $element.find('.sed-portfolio-masonry').masonry();
            });
        });



        api( "portfolio_number_columns" , function( value ) {
            value.bind( function( to ) {
                var gallery , baseClass;

                switch ( api( "portfolio_layout_type")() ) {
                    case "grid":
                        gallery = '.module.module-grid-gallery';
                        baseClass = 'sed-columns-';
                    break;
                    case "masonry":
                        gallery = '.module.module-masonery-gallery';
                        baseClass = 'sed-columns-';
                    break;
                    case "text-layout":
                        gallery = '.portfolio-wrapper .sed-item-portfolio';
                        baseClass = 'sed-column-';
                    break;
                }

                var $container = $element.find( gallery );

                $.each([1,2,3,4,5,6] , function( i , val ){
                    if( $container.hasClass( baseClass + val) ){
                        $container.removeClass( baseClass + val);
                    }
                });

                if( to > 6 ){
                  to = 6;
                }else if( to < 1 ){
                  to = 1;
                }

                var  column_class = baseClass + to;

                $container.addClass(column_class);

                switch ( api( "portfolio_layout_type")() ) {
                    case "grid":
                        $container.trigger( "sed.refreshGridGallery" );
                    break;
                    case "masonry":
                        $element.find('.portfolio-wrapper').masonry();
                    break;
                    case "text-layout":
                        if( api( 'portfolio_text_layout_type' )() == "masonry" )
                            $element.find('.sed-portfolio-masonry').masonry();
                    break;
                }

                //$container.masonry();

            });
        });


        api( "portfolio_item_spacing" , function( value ) {
            value.bind( function( to ) {

                $element.find('.portfolio-item').css({
                  padding: to +'px',
                });
                $element.find('.portfolio-wrapper').css({
                  margin: -to +'px',
                });

                switch ( api( "portfolio_layout_type")() ) {
                    case "grid":
                        $element.find('.module.module-grid-gallery').trigger( "sed.refreshGridGallery" );
                    break;
                    case "masonry":
                        $element.find('.portfolio-wrapper').masonry();
                    break;
                    case "text-layout":
                        if( api( 'portfolio_text_layout_type' )() == "masonry" )
                            $element.find('.sed-portfolio-masonry').masonry();
                    break;
                }

            });
        });

         /*
        api( "archive_border_width" , function( value ) {
            value.bind( function( to ) {

                $element.find('.item .inner').css({
                  borderWidth: to +'px',
                });

                $element.find('.sed-archive-masonry').masonry();

            });
        }); */

        // display and hide item post meta
        $.each( post_meta , function( key , selector ) {
            api( key , function( value ) {
                value.bind( function( to ) {

                    if( to )
                        $element.find(selector).removeClass("hide");
                    else
                        $element.find(selector).addClass("hide");

                        //$element.find('.sed-archive-masonry').masonry();

                });
            });
        });

        api.preview.bind( 'active', function() {

            api.preview.send( 'sed_portfolio_type' , window._sedPortfolioType );
        });

    });

}(sedApp, jQuery));
